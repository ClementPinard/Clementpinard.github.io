{"version":3,"file":"component---src-pages-index-js-f62db49d5b1c90eb3b85.js","mappings":"kWACWA,EAAa,gCACbC,EAAmB,uCAGnBC,EAAwB,6CACxBC,EAAqB,0CACrBC,EAAqB,0CAErBC,EAAkB,sCCL7B,SAASC,EAAYC,EAAKC,EAAKC,GAC7B,OAAmB,IAAfF,EAAIG,OACC,GAGFH,EAAII,MAAM,GAAGC,QAClB,SAAUC,EAAIC,EAAGC,GACf,OAAIA,EAAIR,EAAIG,OAAS,EACZG,EAAGG,OAAO,CAACR,EAAKM,IAEhBD,EAAGG,OAAO,CAACP,EAAMK,GAE3B,GACD,CAACP,EAAI,IAER,CAEc,SAASU,EAAT,GAQX,IARgC,MAClCC,EADkC,QAElCC,EAFkC,MAGlCC,EAHkC,OAIlCC,EAJkC,KAKlCC,EALkC,KAMlCC,EANkC,WAOlCC,GACC,EACD,IAAIC,EAAWN,EAAQO,KAAKC,GAC1B,wBAAMC,IAAKD,EAAOE,KAAMC,UAAWC,GAChCJ,EAAOK,QACN,gBAAC,IAAD,CAAMC,GAAIN,EAAOK,SAAUL,EAAOE,MAElC,4BAAOF,EAAOE,SAIpBJ,EAAWnB,EAAYmB,EAAU,KAAM,SAEvC,IAAIS,EAASd,EAAMM,KAAKS,GACtB,wBAAMP,IAAKO,EAAKC,IAAKN,UAAWC,GAC9B,gBAAC,IAAD,CAAME,GAAIE,EAAKC,KAAMD,EAAKN,SAG1BQ,EAAO,GASX,OARIb,IAEAa,EADEb,EAAWY,IACN,gBAAC,IAAD,CAAMH,GAAIT,EAAWY,KAAMZ,EAAWK,MAEtC,4BAAOL,EAAWK,OAG7BK,EAAS5B,EAAY4B,EAAQ,MAAO,OAElC,uBAAKJ,UAAWC,EAAsBH,IAAKV,GACzC,wBACEY,UAAWC,EACXO,SAAU,IAAIC,KAAKjB,GAAMkB,mBAAmB,QAAS,CACnDC,KAAM,UACNC,MAAO,OACPC,IAAK,aAGN,IAAIJ,KAAKjB,GAAMkB,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,UAGX,wBAAMZ,UAAWC,GAAjB,OACA,wBAAMD,UAAWC,EAAAA,wBACdR,EACAC,GAAc,KACda,GAEH,2BACCZ,EACD,qBAAGK,UAAWC,GAA4Bb,GACzCgB,EAGN,C,wGCLD,UAnEc,IAAc,IAAd,KAAEU,GAAW,EACzB,MAAQ1B,MAAO2B,EAAWC,SAAUC,IAAiBC,EAAAA,EAAAA,MAC7CC,KAAMC,GAAaN,EAAKO,KAC1B,YAAEC,GAAgBR,EAAKO,KAE3BjC,MAAOmC,EACPC,YAAaC,EAAkB,GAF3B,YAGJC,GACEJ,EACEK,EAAkBF,GAAmBR,EACrCW,EAAiBF,aAAH,EAAGA,EAAaG,UAEpC,OACE,gBAAC,IAAD,CACEzC,MAAO2B,EACPS,YAAaG,EACbD,YAAaE,GAEb,gBAAC,IAAD,CAASE,SAAO,IAChB,gBAAC,IAAD,CAAM1C,MAAOmC,GACX,gBAAC,EAAAQ,YAAD,KAAcX,GACbN,EAAKkB,gBAAgBC,OACpBnB,EAAKkB,gBAAgBC,MAAMrC,KAAKsC,GAC9B,uBAAKpC,IAAKoC,EAAKC,IACb,gBAAC,IAAgBD,OAZ7B,C","sources":["webpack://gatsby-starter-lumen/./src/components/Publication/pub.module.scss","webpack://gatsby-starter-lumen/./src/components/Publication/pub.js","webpack://gatsby-starter-lumen/./src/pages/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var feed__item = \"pub-module--feed__item--ZBuB8\";\nexport var feed__itemAuthor = \"pub-module--feed__item-author--TVjRu\";\nexport var feed__itemDescription = \"pub-module--feed__item-description--i0AVN\";\nexport var feed__itemMetaCategoryLink = \"pub-module--feed__item-meta-category-link--4CPAg\";\nexport var feed__itemMetaDivider = \"pub-module--feed__item-meta-divider--6Nhn4\";\nexport var feed__itemMetaLink = \"pub-module--feed__item-meta-link--tbjG5\";\nexport var feed__itemMetaTime = \"pub-module--feed__item-meta-time--zVcD9\";\nexport var feed__itemReadmore = \"pub-module--feed__item-readmore--496Jx\";\nexport var feed__itemTitle = \"pub-module--feed__item-title--KcZKZ\";\nexport var feed__itemTitleLink = \"pub-module--feed__item-title-link--m+c6D\";","import React from \"react\";\nimport Link from \"../../utils/link\";\nimport * as styles from \"./pub.module.scss\";\n\nfunction intersperse(arr, sep, last) {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  return arr.slice(1).reduce(\n    function (xs, x, i) {\n      if (i < arr.length - 2) {\n        return xs.concat([sep, x]);\n      } else {\n        return xs.concat([last, x]);\n      }\n    },\n    [arr[0]]\n  );\n}\n\nexport default function Publication({\n  title,\n  authors,\n  links,\n  bibtex,\n  date,\n  type,\n  conference,\n}) {\n  var authors_ = authors.map((author) => (\n    <span key={author.name} className={styles[\"feed__itemAuthor\"]}>\n      {author.website ? (\n        <Link to={author.website}>{author.name}</Link>\n      ) : (\n        <span>{author.name}</span>\n      )}\n    </span>\n  ));\n  authors_ = intersperse(authors_, \", \", \" and \");\n\n  var links_ = links.map((link) => (\n    <span key={link.url} className={styles[\"feed__itemMetaLink\"]}>\n      <Link to={link.url}>{link.name}</Link>\n    </span>\n  ));\n  var conf = \"\";\n  if (conference) {\n    if (conference.url) {\n      conf = <Link to={conference.url}>{conference.name}</Link>;\n    } else {\n      conf = <span>{conference.name}</span>;\n    }\n  }\n  links_ = intersperse(links_, \" / \", \" / \");\n  return (\n    <div className={styles[\"feed__item\"]} key={title}>\n      <time\n        className={styles[\"feed__itemMetaTime\"]}\n        dateTime={new Date(date).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        })}\n      >\n        {new Date(date).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n        })}\n      </time>\n      <span className={styles[\"feed__itemMetaDivider\"]}> &mdash; </span>\n      <span className={styles[\"feed__itemMetaCategory\"]}>\n        {type}\n        {conference && \", \"}\n        {conf}\n      </span>\n      <br />\n      {authors_}\n      <p className={styles[\"feed__itemTitle\"]}>{title}</p>\n      {links_}\n    </div>\n  );\n}\n","// @flow strict\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Sidebar from \"../components/Sidebar\";\nimport Page from \"../components/Page\";\nimport useSiteMetadata from \"../utils/use-site-metadata\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport Publication from \"../components/Publication\";\n\nconst Home = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { body: pageBody } = data.mdx;\n  const { frontmatter } = data.mdx;\n  const {\n    title: pageTitle,\n    description: pageDescription = \"\",\n    socialImage,\n  } = frontmatter;\n  const metaDescription = pageDescription || siteSubtitle;\n  const socialImageUrl = socialImage?.publicURL;\n\n  return (\n    <Layout\n      title={siteTitle}\n      description={metaDescription}\n      socialImage={socialImageUrl}\n    >\n      <Sidebar isIndex />\n      <Page title={pageTitle}>\n        <MDXRenderer>{pageBody}</MDXRenderer>\n        {data.allResearchYaml.nodes &&\n          data.allResearchYaml.nodes.map((node) => (\n            <div key={node.id}>\n              <Publication {...node}></Publication>\n            </div>\n          ))}\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query SlugHome {\n    allResearchYaml(sort: { fields: [date], order: DESC }) {\n      nodes {\n        id\n        title\n        date\n        bibtex\n        authors {\n          name\n          website\n        }\n        links {\n          name\n          url\n        }\n        conference {\n          name\n          url\n        }\n        type\n      }\n    }\n    mdx(slug: { eq: \"home\" }) {\n      id\n      body\n      frontmatter {\n        title\n        date\n        socialImage\n      }\n    }\n  }\n`;\n\nexport default Home;\n"],"names":["feed__item","feed__itemAuthor","feed__itemMetaDivider","feed__itemMetaLink","feed__itemMetaTime","feed__itemTitle","intersperse","arr","sep","last","length","slice","reduce","xs","x","i","concat","Publication","title","authors","links","bibtex","date","type","conference","authors_","map","author","key","name","className","styles","website","to","links_","link","url","conf","dateTime","Date","toLocaleDateString","year","month","day","data","siteTitle","subtitle","siteSubtitle","useSiteMetadata","body","pageBody","mdx","frontmatter","pageTitle","description","pageDescription","socialImage","metaDescription","socialImageUrl","publicURL","isIndex","MDXRenderer","allResearchYaml","nodes","node","id"],"sourceRoot":""}